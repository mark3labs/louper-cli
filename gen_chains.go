//go:build ignore
// +build ignore

package main

import (
	"encoding/json"
	"log"
	"net/http"
	"os"
	"text/template"

	"github.com/mark3labs/louper-cli/types"
)

func main() {
	// open file
	f, err := os.Create("./constants/chains_generated.go")
	if err != nil {
		log.Println("create file: ", err)
		return
	}

	t := template.Must(template.New("").Parse(`// Code generated by go generate. DO NOT EDIT.
package constants

var chainNamesToID = map[string]uint64{
  {{ range $k, $v := . }}"{{ $k }}": {{ $v.ID }},
  {{ end }}
}

var chainIdsToName = map[uint64]string{
  {{ range $k, $v := . }}{{ $v.ID }}: "{{ $k }}",
  {{ end }}
}`))

	// Get chains from https://louper.dev/chains
	resp, err := http.Get("https://louper.dev/chains")
	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()

	var chains types.Chains

	err = json.NewDecoder(resp.Body).Decode(&chains)
	if err != nil {
		log.Fatal(err)
	}

	// assign a value to the placeholder and write to file
	err = t.Execute(f, chains)
	if err != nil {
		log.Print("execute: ", err)
		return
	}

	f.Close()
}
